{"tagline":"Simple in-browser document based data store","google":"","body":"# BrowserDB\r\n\r\n*Experimental. Tested on latest versions of Chromium.*\r\n\r\n#### Mission\r\n\r\nIndexedDB has a terribly confusing API.  Can we better it?\r\n\r\nCan we provide a simpler API? Can this API be similar to popular document based data stores?\r\n\r\n*Enter BrowserDB*\r\n\r\n#### In-browser only\r\n\r\nBrowserDB should be used in the browser only. It is not a server side JavaScript library.\r\n\r\n#### Inspiration\r\n\r\nMongoDB has a excellent API. It makes querying and working with the datastore pleasurable.\r\n\r\nBrowserDB hopes to deliver a similar experience to developers.\r\n\r\n## Examples\r\n\r\n    <script src=\"https://raw.github.com/Srirangan/browserdb/master/browserdb.js\"></script>\r\n\r\n    // Create a database\r\n\r\n    new BrowserDb({\r\n      db:\"myAppsDb\",\r\n      collections:[\"one\", \"two\", \"three\"]\r\n    }, function (error, browserDb) {\r\n      if( !error ) console.log(\"success\");\r\n    });\r\n\r\n\r\n\r\n    // Change the collections / schema\r\n    // No versioning pain\r\n\r\n    new BrowserDb({\r\n      db:\"myAppsDb\",\r\n      collections:[\"users\", \"books\"]\r\n    }, function (error, browserDb) {\r\n      if( !error ) console.log(\"success\");\r\n    });\r\n\r\n\r\n\r\n    // Save some books\r\n\r\n    browserDb.books.save({\r\n      __id:1,\r\n      topic:[\"javascript\"],\r\n      title:\"The Good Parts\",\r\n      cost:50\r\n    });\r\n\r\n    browserDb.books.save({\r\n      __id:2,\r\n      topic:\"android\",\r\n      title:\"Android in action\",\r\n      cost:100\r\n    });\r\n\r\n    browserDb.books.save({\r\n      __id:3,\r\n      topic:[\"android\", \"java\"],\r\n      title:\"Apache Maven 3 Cookbook\",\r\n      author:\"Srirangan\",\r\n      cost:150\r\n    });\r\n\r\n    browserDb.books.save({ // __id not mandatory, gets auto generated\r\n      topic:[\"android\"],\r\n      title:\"Another android book\",\r\n    });\r\n\r\n\r\n\r\n    // Find some books\r\n\r\n    browserDb.books.find(function (error, books) { // find all\r\n      // books.length === 3\r\n    });\r\n\r\n    browserDb.books.findOne(function (error, book) {\r\n      console.log(book);\r\n    });\r\n\r\n    browserDb.books.find({title:\"The Good Parts\"}, function (error, books) {\r\n      // books[0].__id === 1\r\n    });\r\n\r\n    browserDb.books.find({topic:\"java\"}, function (error, books) {\r\n      // books[0].__id === 3\r\n    });\r\n\r\n    browserDb.books.find({cost:{$gt:100}}, function (error, books) {\r\n      // books[0].__id === 3\r\n    });\r\n\r\n    browserDb.books.find({cost:{$gte:100}}, function (error, books) {\r\n      // books[0].__id === 2\r\n      // books[1].__id === 3\r\n    });\r\n\r\n    browserDb.books.find({cost:{$lt:100}}, function (error, books) {\r\n      // books[0].__id === 1\r\n    });\r\n\r\n    browserDb.books.find({cost:{$lte:100}}, function (error, books) {\r\n      // books[0].__id === 1\r\n      // books[1].__id === 2\r\n    });\r\n\r\n    browserDb.books.find({cost:{$ne:100}}, function (error, books) {\r\n      // books[0].__id === 1\r\n      // books[1].__id === 3\r\n    });\r\n\r\n    browserDb.books.find({cost:{$nin:[50, 75]}}, function (error, books) {\r\n      // books[0].__id === 2\r\n      // books[1].__id === 3\r\n    });\r\n\r\n    browserDb.books.find({cost:{$mod:[12, 2]}}, function (error, books) {\r\n      // books[0].__id === 1\r\n    });\r\n\r\n    browserDb.books.find({topic:{$size:2}}, function (error, books) {\r\n      // books[0].__id === 3\r\n    });\r\n\r\n    browserDb.books.find({author:{$exists:true}}, function (error, books) {\r\n      // books[0].__id === 3\r\n    });\r\n\r\n    browserDb.books.find({author:{$typeof:\"string\"}}, function (error, books) {\r\n      // books[0].__id === 3\r\n    });\r\n\r\n    browserDb.books.find({topic:{$nottypeof:\"object\"}}, function (error, books) {\r\n      // books[0].__id === 2\r\n    });\r\n\r\n\r\n\r\n    // Remove books\r\n\r\n    browserDb.books.remove({title:\"Android in action\"}, function () {\r\n      //..\r\n    });\r\n\r\n    browserDb.books.remove(function (error, result) { // remove all\r\n      //..\r\n    });\r\n\r\n## Unlicense\r\n\r\n    This is free and unencumbered software released into the public domain.\r\n\r\n    Anyone is free to copy, modify, publish, use, compile, sell, or\r\n    distribute this software, either in source code form or as a compiled\r\n    binary, for any purpose, commercial or non-commercial, and by any\r\n    means.\r\n\r\n    In jurisdictions that recognize copyright laws, the author or authors\r\n    of this software dedicate any and all copyright interest in the\r\n    software to the public domain. We make this dedication for the benefit\r\n    of the public at large and to the detriment of our heirs and\r\n    successors. We intend this dedication to be an overt act of\r\n    relinquishment in perpetuity of all present and future rights to this\r\n    software under copyright law.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n    IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\r\n    OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\r\n    ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\r\n    OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n    For more information, please refer to <http://unlicense.org/>","name":"BrowserDB","note":"Don't delete this file! It's used internally to help with page regeneration."}